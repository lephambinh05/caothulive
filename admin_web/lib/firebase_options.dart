// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: "AIzaSyDnVr2y-CayvAgfBFzZxtGuz68dQn6249w",
    authDomain: "quanly20m.firebaseapp.com",
    projectId: "quanly20m",
    storageBucket: "quanly20m.firebasestorage.app",
    messagingSenderId: "696748829509",
    appId: "1:696748829509:web:8f3feee2ccdd85ac01ac2c",
    measurementId: "G-961GGE1WT3"
  );
}

/*
HƯỚNG DẪN CẤU HÌNH FIREBASE:

1. Truy cập Firebase Console: https://console.firebase.google.com/
2. Tạo dự án mới hoặc chọn dự án có sẵn
3. Thêm app Web:
   - Click "Add app" > "Web"
   - Đặt tên app (ví dụ: "admin-web")
   - Copy config object
4. Thay thế các giá trị trong FirebaseOptions.web:
   - apiKey: API key từ Firebase
   - appId: App ID từ Firebase
   - messagingSenderId: Sender ID từ Firebase
   - projectId: Project ID từ Firebase
   - authDomain: Auth domain từ Firebase
   - storageBucket: Storage bucket từ Firebase
   - measurementId: Measurement ID (nếu có)

5. Bật Authentication:
   - Vào Authentication > Sign-in method
   - Bật Email/Password

6. Bật Firestore:
   - Vào Firestore Database
   - Tạo database mới
   - Chọn mode: Test mode (cho development)
*/
